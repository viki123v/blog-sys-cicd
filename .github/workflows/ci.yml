name: CI 

on:
    # pull_request:
        # branches: [ master ]
        # types: [ opened, reopened, synchronize ]
    push:
        branches: 
          - "**"
    workflow_dispatch:
      inputs:
        tag:
          description: 'Tag for images'
          type: string
          required: true
       

permissions:
  pull-requests: read
  actions: write 

jobs:
    fronted-check: 
      name: Frontend changed 
      uses: ./.github/workflows/checks.yml
      with: 
          fs-path: frontend/**
    frontend:
        name: Frontend 
        runs-on: ubuntu-latest
        needs: [ fronted-check ] 
        environment: prod 
        if: ${{needs.fronted-check.outputs.run == 'true'}}
        defaults:
          run:
            working-directory: ./frontend
        steps:
            - name: Get code 
              uses: actions/checkout@v5

            - name: Setup Node.js 
              uses: actions/setup-node@v4
              with:
                node-version-file: 'frontend/.nvmrc'

            - name: Install deps 
              run: npm i 
            
            - name: Linting | Formatting | Typecheck 
              run: npm run lint && npm run format:check
            
            - name: Log in to GitHub Container Registry
              if: github.event_name == 'push'
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

    fe-deploy:
      name: Deploy Frontend
      uses: ./.github/workflows/images.yml
      with: 
        name: fe 
        build-args: |
          NODE_VERSION=${{ vars.NODE_VERSION }},
          VITE_HOST=${{ vars.VITE_HOST }}
        dockerfile: frontend.Dockerfile

    backend-check: 
      name: Backend changed 
      uses: ./.github/workflows/checks.yml
      with: 
          fs-path: backend/** 

    backend:
        name: Backend 
        runs-on: ubuntu-latest
        needs: [ backend-check ] 
        if: ${{needs.backend-check.outputs.run == 'true'}}
        defaults:
          run:
            working-directory: ./backend
        steps:
            - name: Get code 
              uses: actions/checkout@v5
            
            - name: Install python 
              uses: actions/setup-python@v5
              with: 
                python-version-file: 'backend/.python-version'

            - name: Install uv
              uses: astral-sh/setup-uv@v6
            
            - name: Install deps 
              run: uv sync --locked --all-extras --dev
            
            - name: Lint | Format | Typecheck 
              run: |
                uv run ruff format --check .
                uv run ruff check . 
                uv run mypy .
            
            - name: Log in to GitHub Container Registry
              if: github.event_name == 'push'
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Get tag for image 
              if: github.event_name == 'push'
              id: get_tag
              run: |
                git fetch --tags

                LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)

                if [ -z "$LATEST_TAG" ]; then
                  LATEST_TAG="0.0.0"
                fi

                IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"

                PATCH=$((PATCH + 1))

                NEW_TAG="$MAJOR.$MINOR.$PATCH"

                echo "Tag for this commit: $NEW_TAG"

                git tag "$NEW_TAG"
                git push origin "$NEW_TAG"

                echo "TAG=$NEW_TAG" >> $GITHUB_OUTPUT


            - name: Build Docker image
              if: github.event_name == 'push' && steps.get_tag.outputs.TAG != ''
              working-directory: ./
              run: |
                  docker build \
                  -t ghcr.io/viki123v/blog-sys-cicd/be:${{ steps.get_tag.outputs.TAG }} \
                  -f ./infra/backend.Dockerfile \
                  .

            - name: Push Docker image
              if: github.event_name == 'push' && steps.get_tag.outputs.TAG != ''
              run: |
                docker push ghcr.io/viki123v/blog-sys-cicd/be:${{ steps.get_tag.outputs.TAG }}

                docker tag ghcr.io/viki123v/blog-sys-cicd/be:${{ steps.get_tag.outputs.TAG }} ghcr.io/viki123v/blog-sys-cicd/be:latest 
                docker push ghcr.io/viki123v/blog-sys-cicd/be:latest

